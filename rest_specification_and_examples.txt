REST Specification:

POST http://127.0.0.1:8000/api/protein/ - add a new record
GET  http://127.0.0.1:8000/api/protein/[PROTEIN ID] - return the protein sequence and all we know about it
http://127.0.0.1:8000/api/protein/A0A016S8J7 returns
{
    "protein_id": "A0A016S8J7",
    "sequence": "MVIGVGFLLVLFSSSVLGILNAGVQLRIEELFDTPGHTNNWAVLVCTSRFWFNYRHVSNVLALYHTVKRLGIPDSNIILMLAEDVPCNPRNPRPEAAVLSA",
    "taxonomy": {
        "taxa_id": 53326,
        "clade": "E",
        "genus": "Ancylostoma",
        "species": "ceylanicum"
    },
    "length": 101,
    "domains": [
        {
            "pfam_id": {
                "domain_id": "PF01650",
                "domain_description": "PeptidaseC13family"
            },
            "description": "Peptidase C13 legumain",
            "start": 40,
            "stop": 94
        },
        {
            "pfam_id": {
                "domain_id": "PF02931",
                "domain_description": "Neurotransmitter-gatedion-channelligandbindingdomain"
            },
            "description": "Neurotransmitter-gated ion-channel ligand-binding domain",
            "start": 23,
            "stop": 39
        }
    ]
}

GET  http://127.0.0.1:8000/api/pfam/[PFAM ID] - return the domain and it's deacription
http://127.0.0.1:8000/api/pfam/PF00360 returns
{
    "domain_id": "PF00360",
    "domain_description": "Phytochromeregion"
}

GET  http://127.0.0.1:8000/api/proteins/[TAXA ID] - return a list of all proteins for a given organism
NOTE: "id" here is sequential the primary key value generated by django for the table that holds the domain data
http://127.0.0.1:8000/api/proteins/55661 returns
[
    {
        "id": 88766,
        "protein_id": "A0A091FY39"
    },
    {
        "id": 88761,
        "protein_id": "A0A091FMY9"
    },
    {
        "id": 88762,
        "protein_id": "A0A091FQA9"
    },
    {
        "id": 88763,
        "protein_id": "A0A091FRU1"
    },
    {
        "id": 88764,
        "protein_id": "A0A091FUC2"
    },
    {
        "id": 88765,
        "protein_id": "A0A091FX61"
    },
    {
        "id": 88767,
        "protein_id": "A0A091G8V7"
    },
    {
        "id": 88768,
        "protein_id": "A0A091GCF7"
    },
    {
        "id": 88769,
        "protein_id": "A0A091GK66"
    },
    {
        "id": 88770,
        "protein_id": "A0A091GM81"
    },
    {
        "id": 88771,
        "protein_id": "A0A091GMX7"
    },
    {
        "id": 88772,
        "protein_id": "A0A091GY85"
    }
]

GET  http://127.0.0.1:8000/api/pfams/[TAXA ID] - return a list of all domains in all the proteins for a given organism.
NOTE: "id" here is sequential the primary key value generated by django for the table that holds the domain data
http://127.0.0.1:8000/api/pfams/55661 returns
[
    {
        "id": 88896,
        "pfam_id": {pon
            "domain_id": "mobidb-lite",
            "domain_description": "disorder prediction"
        }
    },
    {
        "id": 88891,
        "pfam_id": {
            "domain_id": "PF00307",
            "domain_description": "Calponinhomology(CH)domain"
        }
    },
    {
        "id": 88892,
        "pfam_id": {
            "domain_id": "PF00415",
            "domain_description": "Regulatorofchromosomecondensation(RCC1)repeat"
        }
    },
    {
        "id": 88893,
        "pfam_id": {
            "domain_id": "PF07648",
            "domain_description": "Kazal-typeserineproteaseinhibitordomain"
        }
    },
    {
        "id": 88894,
        "pfam_id": {
            "domain_id": "PF16172",
            "domain_description": "DOCKN-terminus"
        }
    },
    {
        "id": 88895,
        "pfam_id": {
            "domain_id": "mobidb-lite",
            "domain_description": "disorder prediction"
        }
    },
    {
        "id": 88897,
        "pfam_id": {
            "domain_id": "mobidb-lite",
            "domain_description": "disorder prediction"
        }
    },
    {
        "id": 88898,
        "pfam_id": {
            "domain_id": "mobidb-lite",
            "domain_description": "disorder prediction"
        }
    },
    {
        "id": 88899,
        "pfam_id": {
            "domain_id": "mobidb-lite",
            "domain_description": "disorder prediction"
        }
    },
    {
        "id": 88900,
        "pfam_id": {
            "domain_id": "PF00041",
            "domain_description": "FibronectintypeIIIdomain"
        }
    },
    {
        "id": 88901,
        "pfam_id": {
            "domain_id": "PF02141",
            "domain_description": "DENN(AEX-3)domain"
        }
    },
    {
        "id": 88902,
        "pfam_id": {
            "domain_id": "PF14260",
            "domain_description": "C4-typezinc-fingerofDNApolymerasedelta"
        }
    }
]

GET  http://127.0.0.1:8000/api/coverage/[PROTEIN ID] - return the domain coverage for a given protein. That is Sum of the protein domain lengths (start-stop)/length of protein.
http://127.0.0.1:8000/api/coverage/A0A016S8J7 returns
coverage:	0.693069306930693
